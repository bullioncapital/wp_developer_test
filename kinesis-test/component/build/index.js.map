{"version":3,"file":"index.js","mappings":"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","sources":["webpack://assets/external window [\"wp\",\"apiFetch\"]","webpack://assets/external window [\"wp\",\"blockEditor\"]","webpack://assets/external window [\"wp\",\"blocks\"]","webpack://assets/external window [\"wp\",\"element\"]","webpack://assets/webpack/bootstrap","webpack://assets/webpack/runtime/compat get default export","webpack://assets/webpack/runtime/define property getters","webpack://assets/webpack/runtime/hasOwnProperty shorthand","webpack://assets/webpack/runtime/make namespace object","webpack://assets/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { RichText } from '@wordpress/block-editor';\nimport apiFetch from '@wordpress/api-fetch';\nimport { useEffect } from '@wordpress/element';\n\nregisterBlockType( 'kinesis-test/post-cat-list', {\n    title: 'Post & Category List', // The title of block in editor.\n    icon: 'admin-comments', // The icon of block in editor.\n    category: 'layout', // The category of block in editor.\n    // Custom Attributes\n    attributes: {\n        title: {\n            type: 'string',\n            source: 'html',\n            selector: 'h2',\n        },\n        body: {\n            type: 'string',\n            source: 'html',\n            selector: 'p',\n            default: 'recreate this whole card component as UI of your gutenberg block; with an editable headline and two lists displaying categories and most recent posts, like so:',\n        },\n        recentCategories: {\n            type: 'array',\n            default: []\n        },\n        recentPosts: {\n            type: 'array',\n            default: []\n        }\n    },\n\n    edit({ attributes, setAttributes}) {\n        const {\n            title,\n            body,\n            recentPosts,\n            recentCategories\n        } = attributes;\n\n        // Retreiving Posts and Categories for WP REST API\n        useEffect ( () => {\n            apiFetch( { path: '/wp/v2/posts?per_page=4' } ).then( ( posts ) => {\n                setAttributes( { recentPosts: posts } );\n            } );\n\n            apiFetch( { path: '/wp/v2/categories?per_page=4' } ).then( ( categories ) => {\n                setAttributes( { recentCategories: categories } );\n            } );\n        }, [] )\n\n        // Change Block Content Functions\n        function onChangeTitle(newTitle) {\n            setAttributes( { title: newTitle } );\n        }\n\n        function onChangeBody(newBody) {\n            setAttributes( { body: newBody } );\n        }\n\n        return ([\n            <section className=\"text-blueGray-700 \">\n                <RichText key=\"editable\"\n                          tagName=\"h2\"\n                          placeholder=\"A small headline to switch your visitors into users.\"\n                          value={ title }\n                          onChange={ onChangeTitle }/>\n                <RichText key=\"editable\"\n                          tagName=\"p\"\n                          value={ body }\n                          onChange={ onChangeBody }/>\n                <ul className=\"w-1/2\">\n                    {recentCategories.map(category => (\n                        <li key={category.id}><a href={category.link}>{category.name}</a></li>\n                    ))}\n                </ul>\n                <ul className=\"w-1/2\">\n                    {recentPosts.map(post => (\n                        <li key={post.id}><a href={post.link}>{post.title.rendered}</a></li>\n                    ))}\n                </ul>\n            </section>\n        ]);\n    },\n\n    save({ attributes }) {\n        const {\n            title,\n            body,\n            recentPosts,\n            recentCategories\n        } = attributes;\n\n        return (\n            <section className=\"text-blueGray-700 \">\n                <div className=\"container flex flex-col items-center px-5 py-8 mx-auto\">\n                    <div className=\"flex flex-col w-full mb-12 text-left \">\n                        <div className=\"w-full mx-auto lg:w-1/2\">\n                            <h3 className=\"mb-4 text-xs font-semibold tracking-widest text-black uppercase title-font\">Test Option 1</h3>\n                            <h2 className=\"mx-auto mb-6 text-xl font-semibold leading-none tracking-tighter text-black title-font\">{ title }</h2>\n                            <RichText.Content \n                                tagName=\"p\"\n                                value={ body }\n                                className={ 'mx-auto mb-8 text-base font-medium leading-relaxed text-blueGray-700' } />\n                            <div className=\"flex flex-wrap justify-start flex-grow mt-8 text-left md:mt-0 \">\n                                <div className=\"space-y-4 w-1/2\">\n                                    <p className=\"mb-4 text-xs font-semibold tracking-widest text-black uppercase title-font\"> Categories: </p>\n                                    <nav className=\"mb-10 list-none\">\n                                        {recentCategories.map(category => (\n                                            <li>\n                                                <a href={category.link} className=\"mb-4 text-xs font-semibold tracking-widest text-blue-600 uppercase hover:text-black title-font focus:ring-2 ring-offset-current ring-offset-2\">{category.name}</a>\n                                            </li>\n                                        ))}\n                                    </nav>\n                                </div>\n                                <div className=\" space-y-4 w-1/2\">\n                                    <p className=\"mb-4 text-xs font-semibold tracking-widest text-black uppercase title-font\"> Recent posts: </p>\n                                    <nav className=\"mb-10 list-none\">\n                                        {recentPosts.map(post => (\n                                            <li key={post.id}>\n                                                <a href={post.link} className={'mb-4 text-xs font-semibold tracking-widest text-blue-600 uppercase hover:text-black title-font focus:ring-2 ring-offset-current ring-offset-2'}>{post.title.rendered}</a>\n                                            </li>\n                                        ))}\n                                    </nav>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n} );\n\n"],"names":["registerBlockType","RichText","apiFetch","useEffect","title","icon","category","attributes","type","source","selector","body","default","recentCategories","recentPosts","edit","setAttributes","path","then","posts","categories","onChangeTitle","newTitle","onChangeBody","newBody","map","id","link","name","post","rendered","save"],"sourceRoot":""}